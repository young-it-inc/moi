<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.youngit.office.api.as.mapper.AsMapper">

    <sql id=""> </sql>
    <!-- AS 리스트 + 상태별 조회 및 검색 -->
    <select id="getOrSearchListAs" parameterType="AsSearchDto" resultType="AsModel">
    SELECT *
    FROM o_as
    where is_used = 'Y'
        <if test="searchKey != null and searchKey != ''">
            <choose>
                <when test="searchKey == 'SK01'">
                    and customer_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK02'">
                    and customer_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK03'">
                    and customer_address = #{searchValue}
                </when>
                <when test="searchKey == 'SK04'">
                    and customer_phone_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK05'">
                    and meter_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK06'">
                    and meter_reading_serial_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK07'">
                    and terminal_box_serial_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK08'">
                    and worker_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK09'">
                    and meterman_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK10'">
                    and install_agree_date = #{searchValue}
                </when>
            </choose>
        </if>
    </select>

    <!-- AS 리스트 + 상태별 조회 및 검색 카운트 -->
    <select id="countGetOrSearchListAs" resultType="int">
    SELECT count(*)
    FROM o_as
    where is_used = 'Y'
        <if test="searchKey != null and searchKey != ''">
            <choose>
                <when test="searchKey == 'SK01'">
                    and customer_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK02'">
                    and customer_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK03'">
                    and customer_address = #{searchValue}
                </when>
                <when test="searchKey == 'SK04'">
                    and customer_phone_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK05'">
                    and meter_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK06'">
                    and meter_reading_serial_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK07'">
                    and terminal_box_serial_number = #{searchValue}
                </when>
                <when test="searchKey == 'SK08'">
                    and worker_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK09'">
                    and meterman_name = #{searchValue}
                </when>
                <when test="searchKey == 'SK10'">
                    and install_agree_date = #{searchValue}
                </when>
            </choose>
        </if>
    </select>

    <!-- AS 고객 상세 조회 -->
    <select id="getOneAs" resultType="AsModel">
    SELECT *
    FROM o_as
    where as_uniq_id = #{asUniqId}
    </select>

    <!-- AS 등록 -->
    <insert id="registerAs" parameterType="AsModel">
    INSERT INTO o_as (as_uniq_id, install_uniq_id, client_builder_id, assign_idx, office_id,
                      customer_number, customer_name, customer_address, customer_phone_number, as_year_month,
                      as_week, as_receipt_date, as_request_date, as_process_date, as_complete_date,
                      as_content, as_state_code, as_cause_code, as_cuase_sub_code, as_member_id,
                      as_result, as_memo, is_replaced, meter_number, meter_caliber,
                      meter_reading_serial_number, meter_reading_version, meter_reading_location, terminal_box_serial_number, terminal_box_location,
                      external_indicator_serial_number, old_customer_number, install_environment_code, cable_status_code, before_meter_reading_serial_number,
                      before_terminal_box_serial_number, before_external_indicator_serial_number, cable_length, as_etc, is_external_indicator_installed,
                      is_enclosure_installed, as_signature_path, as_before_path, as_after_path, as_environment_path,
                      as_before_meter_path, as_after_meter_path, as_before_meter_reading_path, as_after_meter_reading_path, as_before_terminal_box_path,
                      as_after_terminal_box_path, as_before_cable_path, as_after_cable_path, correct_count, meterman_name,
                      meterman_phone_number, is_deducted, deduction_id, deduction_reason, pay_apply_date,
                      created_at, created_by_member_uniq_id, updated_at, updated_by_member_uniq_id, is_used,
                      receipt_number, temp_production_date, as_code, customer_phone_number_2, deduction_year_month,
                      deduction_amount, before_install_uniq_id, inspection_date)
    VALUES (#{asUniqId}, #{installUniqId}, #{clientBuilderId}, #{assignNumber}, #{officeId},
            #{customerNumber}, #{customerName}, #{customerAddress}, #{customerPhoneNumber}, #{asYearMonth},
            #{asWeek}, #{asReceiptDate}, #{asRequestDate}, #{asProcessDate}, #{asCompleteDate},
            #{asContent}, #{asProcessStatusCode}, #{asCauseCode}, #{asCuaseSubCode}, #{asMemberId},
            #{asResult}, #{asMemo}, #{isReplaced}, #{meterNumber}, #{meterCaliber},
            #{meterReadingSerialNumber}, #{meterReadingVersion}, #{meterReadingLocation}, #{terminalBoxSerialNumber}, #{terminalBoxLocation},
            #{externalIndicatorSerialNumber}, #{oldCustomerNumber}, #{installEnvironmentCode}, #{cableStatusCode}, #{beforeMeterReadingSerialNumber},
            #{beforeTerminalBoxSerialNumber}, #{beforeExternalIndicatorSerialNumber}, #{cableLength}, #{asEtc}, #{isExternalIndicatorInstalled},
            #{isEnclosureInstalled}, #{asSignaturePath}, #{asBeforePath}, #{asAfterPath}, #{asEnvironmentPath},
            #{asBeforeMeterPath}, #{asAfterMeterPath}, #{asBeforeMeterReadingPath}, #{asAfterMeterReadingPath}, #{asBeforeTerminalBoxPath},
            #{asAfter_terminalBox_path}, #{asBeforeCablePath}, #{asAfterCablePath}, #{correctCount}, #{metermanName},
            #{metermanPhoneNumber}, #{isDeducted}, #{deductionId}, #{deductionReason}, #{payApplyDate},
            CURRENT_TIMESTAMP(3), #{createdByMemberUniqId}, CURRENT_TIMESTAMP(3), #{updatedByMemberUniqId}, 'Y',
            #{receiptNumber}, #{tempProductionDate}, #{asCode}, #{customerPhoneNumber2}, #{deductionYearMonth},
            #{deductionAmount}, #{beforeInstallUniqId}, #{inspectionDate})
    </insert>

    <!-- AS 수정 -->
    <update id="updateAs" parameterType="AsModel">
    UPDATE o_as
    SET
        <if test="name != null and name !=''">
            name = #{name},
        </if>
        <if test="email != null and email !=''">
            email = #{email},
        </if>
        <if test="password != null and password !=''">
            password = #{password},
        </if>
        <if test="phoneNumber != null and phoneNumber !=''">
            phone_number = #{phoneNumber},
        </if>
        <if test="status != null and status !=''">
            status = #{status},
        </if>
        <if test="authorityCode != null and authorityCode !=''">
            authority_code = #{authorityCode},
        </if>
        <if test="positionCode != null and positionCode !=''">
            position_code = #{positionCode},
        </if>
        <if test="departmentCode != null and departmentCode !=''">
            department_code = #{departmentCode},
        </if>
        <if test="taskCode != null and taskCode !=''">
            task_code = #{taskCode},
        </if>
        <if test="typeCode != null and typeCode !=''">
            type_code = #{typeCode},
        </if>
        <if test="memberUniqId != null and memberUniqId !=''">
            member_uniq_id = #{memberUniqId},
        </if>
        update_at = CURRENT_TIMESTAMP(3)
    where as_uniq_id = #{asUniqId}
    </update>

    <!-- AS 삭제 -->
    <update id="deleteAs" parameterType="String">
        UPDATE o_as
        SET is_used = 'N'
    </update>

</mapper>